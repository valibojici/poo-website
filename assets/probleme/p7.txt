#BEGIN_PROBLEM
#include <iostream>
#include <cstring>
using namespace std;

int main() {
	char* s = new char[20];
	strcpy(s, "Hello world!");

	cout << s << endl;

	delete[] s;

	s = new char[4];
	s[0] = 'a';
	s[1] = 'b';
	s[2] = 'c';
	s[3] = 0;

	cout << s << endl;

	delete[] s;
}
#END_PROBLEM


#BEGIN_SOLUTION
<div>
Programul functioneaza corect. Se afiseaza:
</div>
<output>
Hello world!
abc
</output>
<div>
Se aloca dinamic spatiu in memorie pentru un sir de caractere de lungime 20 (practic 19 pentru ca ultimul trebuie sa fie caracterul special <inline>'\0'</inline> ca sa marcheze sfarsitul). Se copiaza <inline>"Hello world!"</inline> in <var>s</var> si se afiseaza dupa care se sterge si se aloca iar spatiu pentru 4 caractere de data asta. Se pun <inline>'a'</inline>, <inline>'b'</inline>, <inline>'c'</inline> pe primele 3 pozitii iar pe ultima se pune caracterul special <inline>'\0'</inline> sau <inline>0</inline> (sau <inline>NULL</inline>). La final se elibereaza memoria cu <inline>delete[]</inline>.
</div>
<div>
Daca nu pui <inline>'\0'</inline> sau <inline>0</inline> la sfarsit se pot afisa caractere in plus la finalul cuvantului pentru ca se afiseaza caracter cu caracter pana la <inline>0</inline> pus de tine sau gasit undeva in memorie random.
</div>
<block>
s = new char[3];
s[0] = 'a';
s[1] = 'b';
s[2] = 'c';

cout << s << endl;
</block>
<div>
Se afiseaza (pe calculatorul meu):
</div>
<output>
Hello world!
abc$|PPP
</output>
#END_SOLUTION


#BEGIN_TAGS
easy, correct, pointers, dynamic memory allocation
#END_TAGS