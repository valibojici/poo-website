#BEGIN_PROBLEM
#include <iostream>
using namespace std;

int main() {
	int x = 1, y = 2, z = 3;
	int &a = x, &b = y, &c = z;

	int& arr[] = { a, b ,c };

	arr[0] = 100;

	cout << arr[0] << endl;
	cout << x << " " << y << " " << z << endl;
}
#END_PROBLEM


#BEGIN_SOLUTION
<div>
Programul nu e corect, avem eroare la linia 8:<inline>int& arr[] = { a, b ,c };</inline>
</div>
<error>
array of reference is not allowed
</error>
<div>
Cum spune si eroarea nu putem creea array-uri (de fapt orice container) de referinte. Trebuie schimbata linia 8:<inline>int& arr[] = { a, b ,c };</inline> in <inline>int arr[] = { a, b ,c };</inline>.
</div>
<div>
Mai intai se creeaza 3 variabile si dupa 3 referinte pentru cele 3 variabile. Dupa se creeaza un array de <inline>int</inline> iar valorile din el sunt de fapt valorile variabilelor <var>x</var>, <var>y</var>, <var>z</var> pentru ca referintele sunt ca un alias pentru variabilele <var>x</var>, <var>y</var>, <var>z</var> deci <inline>arr[0] = 100;</inline> nu modifica valoarea lui <var>x</var>.
</div>
<div>
De ce nu putem avea array de referinte? Cand creezi un array, de ex <inline>int v[3] = {1, 2, 3};</inline>, <inline>v</inline> este un pointer la primul element, iar elementele sunt unele langa altele in memorie. Cand accesezi elementul <inline>v[2]</inline> de fapt este <inline>*(v + 2)</inline>(de la primul element te duci 2 pozitii in fata). Acum daca ai avea <inline>int& v[3] = {a, b, c};</inline> v este un pointer la primul element, adica <var>a</var>, dar <var>a</var> e referinta si adresa lui <var>a</var> este adresa varibilei la care se refera (pentru care e un alias) care este altundeva in memorie deci nu ai cum sa te referi la restul elementelor.
</div>
<div>
De asemenea nu poti avea pointeri la referinte si referinte la referinte.
</div>
#END_SOLUTION


#BEGIN_TAGS
incorrect, easy, references
#END_TAGS